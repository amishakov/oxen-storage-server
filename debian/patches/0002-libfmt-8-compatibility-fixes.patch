From: Jason Rhinelander <jason@imaginary.ca>
Date: Fri, 4 Feb 2022 10:56:44 -0400
Subject: libfmt-8 compatibility fixes

---
 crypto/include/channel_encryption.hpp | 3 +++
 crypto/src/channel_encryption.cpp     | 5 +++++
 httpserver/service_node.cpp           | 2 +-
 3 files changed, 9 insertions(+), 1 deletion(-)

diff --git a/crypto/include/channel_encryption.hpp b/crypto/include/channel_encryption.hpp
index 28d5215..eb36b4f 100644
--- a/crypto/include/channel_encryption.hpp
+++ b/crypto/include/channel_encryption.hpp
@@ -2,6 +2,7 @@
 
 #include <string>
 #include <string_view>
+#include <iosfwd>
 
 #include "oxend_key.h"
 
@@ -27,6 +28,8 @@ inline constexpr std::string_view to_string(EncryptType type) {
     return ""sv;
 }
 
+std::ostream& operator<<(std::ostream &o, const EncryptType& t);
+
 // Encryption/decription class for encryption/decrypting outgoing/incoming messages.
 class ChannelEncryption {
   public:
diff --git a/crypto/src/channel_encryption.cpp b/crypto/src/channel_encryption.cpp
index 5c9e785..5ce44a9 100644
--- a/crypto/src/channel_encryption.cpp
+++ b/crypto/src/channel_encryption.cpp
@@ -72,6 +72,11 @@ EncryptType parse_enc_type(std::string_view enc_type) {
     throw std::runtime_error{"Invalid encryption type " + std::string{enc_type}};
 }
 
+std::ostream& operator<<(std::ostream& o, const EncryptType& t) {
+    return o << to_string(t);
+}
+
+
 std::string ChannelEncryption::encrypt(EncryptType type, std::string_view plaintext, const x25519_pubkey& pubkey) const {
     switch (type) {
         case EncryptType::xchacha20: return encrypt_xchacha20(plaintext, pubkey);
diff --git a/httpserver/service_node.cpp b/httpserver/service_node.cpp
index a54c01a..e2888ca 100644
--- a/httpserver/service_node.cpp
+++ b/httpserver/service_node.cpp
@@ -750,7 +750,7 @@ void ServiceNode::test_reachability(const sn_record& sn, int previous_failures)
                 auto& pk = sn.pubkey_legacy;
                 bool success = false;
                 if (r.error.code != cpr::ErrorCode::OK) {
-                    OXEN_LOG(debug, "FAILED HTTPS ping test of {}: {} {}", pk, r.error.code, r.error.message);
+                    OXEN_LOG(debug, "FAILED HTTPS ping test of {}: {}", pk, r.error.message);
                 } else if (r.status_code != 200) {
                     OXEN_LOG(debug, "FAILED HTTPS ping test of {}: received non-200 status {} {}",
                             pk, r.status_code, r.status_line);
